import type { TranslationKeys } from '../i18n';

export const en: TranslationKeys = {
  nav: {
    home: 'Home',
    settings: 'Settings',
    library: 'Library',
  },

  // App info
  app: {
    title: 'ComicLLM',
    subtitle: 'Local comic text extraction and translation tool using LLMs',
    github: 'View on GitHub',
  },
  
  common: {
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    export: 'Export',
    refresh: 'Refresh',
    close: 'Close',
    previous: 'Previous',
    next: 'Next',
    go: 'Go',
    yes: 'Yes',
    no: 'No',
    ok: 'OK',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    continue: 'Continue',
    create: 'Create',
    update: 'Update',
    upload: 'Upload',
    process: 'Process',
    retry: 'Retry',
    clear: 'Clear',
    reset: 'Reset',
    tryAgain: 'Try Again',
    backToHome: 'Back to Home',
    autoSave: 'Auto-save',
    current: 'Current',
    translated: 'translated',
    created: 'Created',
    noComicSelected: 'No comic book selected',
    continueReading: 'Continue Reading',
    startNewComic: 'Start New Comic',
    startReading: 'Start Reading',
    newComic: 'New Comic',
    comicBookTitle: 'Comic Book Title',
    description: 'Description',
    dropPages: 'Drop the comic pages here',
    selectPages: 'Select Pages',
    processing: 'Processing...',
    pleaseWait: 'Please wait while we analyze your comics...',
    smartOrdering: 'Select single or multiple files - smart ordering applied automatically',
    autoCreateSession: 'A new comic book will be created automatically when you upload pages',
    pagesWithoutSession: 'Pages will be processed without organizing into a comic book',
  },
  
  upload: {
    title: 'Upload Comic Page',
    dragDrop: 'Drag and drop your comic image here',
    orClickSelect: 'or click to select a file',
    supportedFormats: 'Supported formats: JPEG, PNG, GIF, WebP',
    maxSize: 'Maximum file size: 10MB',
    selectFile: 'Select File',
    processing: 'Processing...',
    uploadSuccess: 'File uploaded successfully',
    uploadError: 'Upload failed',
    invalidFormat: 'Invalid file format',
    fileTooLarge: 'File too large',
  },
  
  session: {
    currentSession: 'Current Session',
    noActiveSession: 'No active session',
    createNewSession: 'Create New Session',
    switchSession: 'Switch Session',
    sessionCreated: 'Session created successfully',
    nowReading: 'Now reading',
    addToCurrentSession: 'Add to current session',
    createAndStartReading: 'Create & Start Reading',
    sessionName: 'Session Name',
    sessionDescription: 'Session Description',
    sessionNamePlaceholder: 'e.g., Batman Issue #1, Naruto Chapter 700',
    sessionDescriptionPlaceholder: 'Brief description of this comic book...',
  },
  
  library: {
    title: 'Comic Book Library',
    noComics: 'No comic books yet',
    noComicsDescription: 'Create your first comic book to organize your translations',
    newComic: 'New Comic',
    createComic: 'Create New Comic Book',
    editComic: 'Edit Comic Book',
    comicTitle: 'Comic Book Title',
    description: 'Description (optional)',
    created: 'Created',
    updated: 'Updated',
    pages: 'pages',
    completed: 'Completed',
    totalPages: 'Total Pages',
    continueReading: 'Continue reading this comic',
    viewTranslations: 'View translations',
    editDetails: 'Edit comic book details',
    exportJson: 'Export as JSON',
    exportTxt: 'Export TXT',
    exportMarkdown: 'Export Markdown',
    deleteComic: 'Delete comic book',
    deleteConfirm: 'Are you sure you want to delete this comic book? Original files will be preserved.',
    comicDeleted: 'Comic book deleted successfully.',
    exportSuccess: 'Session exported successfully as',
    exportError: 'Failed to export session. Please try again.',
    comicTitlePlaceholder: 'e.g., Batman Issue #1, Naruto Chapter 700',
    descriptionPlaceholder: 'Brief description of this comic book...',
    saveChanges: 'Save Changes',
    noPages: 'No pages in this session yet',
    addedAt: 'Added',
  },
  
  translations: {
    title: 'Translations',
    loadingTranslations: 'Loading translations...',
    noTranslationData: 'No translation data available for this page.',
    pageInfo: 'Page',
    status: 'Status',
    added: 'Added',
    originalText: 'Original Text:',
    chineseTranslation: 'Chinese Translation:',
    explanations: 'Explanations:',
    meaning: 'Meaning:',
    context: 'Context:',
    jumpToPage: 'Jump to',
    enterPageNumber: 'Enter page number...',
    invalidPageNumber: 'Please enter a valid page number',
    noPages: 'No pages found in this comic book.',
  },
  
  settings: {
    title: 'Settings',
    language: 'Language',
    selectLanguage: 'Select Language',
    apiSettings: 'API Settings',
    provider: 'Provider',
    model: 'Model',
    apiKey: 'API Key',
    apiKeyPlaceholder: 'Enter your API key...',
    testConnection: 'Test Connection',
    connectionSuccess: 'Connection successful!',
    connectionError: 'Connection failed',
    invalidApiKey: 'Invalid API key',
    theme: 'Theme',
    darkMode: 'Dark Mode',
    lightMode: 'Light Mode',
    systemTheme: 'System Theme',
    gettingApiKeys: 'Getting Your OpenRouter API Key',
    openrouterSetup: 'OpenRouter Setup',
    whyOpenrouter: 'Why OpenRouter?',
    whyOpenrouterDesc: 'OpenRouter provides access to multiple AI models including Google Gemini, GPT-4, and Claude through a single API with competitive pricing and no waitlists.',
    privacyDataManagement: 'Privacy & Data Management',
    privacyProtected: 'Your Privacy is Protected',
    privacyNotes: [
      'API keys are stored locally in your browser only',
      'No data is sent to our servers or stored in the cloud',
      'All processing happens on your device and LLM providers',
      'Your API keys are never committed to GitHub'
    ],
    clearStoredData: 'Clear Stored Data',
    clearDataDesc: 'Remove all locally stored API keys and settings',
    clearAllData: 'Clear All Data',
    usageTips: 'Usage Tips',
    modelSelection: 'Model Selection',
    modelSelectionDesc: 'Use vision-capable models like',
    costQuality: 'Cost vs Quality',
    costQualityDesc: 'Gemini models offer good balance, GPT-4 models are premium, Claude models excel at analysis',
    imageQuality: 'Image Quality',
    imageQualityDesc: 'Higher resolution images generally produce better text extraction',
    modelPricing: 'Model Pricing',
    modelPricingDesc: 'Check OpenRouter pricing for each model before use',
    languages: 'Languages',
    languagesDesc: 'Currently optimized for English to Chinese translation',
    storage: 'Storage',
    storageDesc: 'Hash-based deduplication automatically saves space by storing identical files only once',
    storageManagement: 'Storage Management',
    popularModels: 'Popular vision models',
    visitOpenRouter: 'Visit openrouter.ai to create an account',
    goToDashboard: 'Go to "Keys" section in your dashboard',
    createApiKey: 'Create a new API key and copy it',
    browseModels: 'Browse available models to choose the best one for your needs',
    modelPlaceholder: 'e.g., google/gemini-2.5-flash-lite-preview-06-17',
    currentModel: 'Current',
    noModelSelected: 'No model selected',
    forComicProcessing: 'for comic processing',
    confirmClearData: 'Are you sure you want to clear all stored data including API keys?',
    dataClearedSuccess: 'All data cleared successfully!'
  },
  
  processing: {
    analyzing: 'Analyzing image...',
    extractingText: 'Extracting text...',
    translating: 'Translating...',
    processingComplete: 'Processing complete!',
    processingError: 'Processing failed',
    noTextFound: 'No text found in image',
    tryAgain: 'Try again',
    analysisResults: 'Analysis Results',
    textExtracted: 'Text extracted successfully',
    translationComplete: 'Translation complete',
  },
  
  export: {
    exportOptions: 'Export Options',
    exportFormat: 'Export Format',
    exportSuccess: 'Export successful',
    exportError: 'Export failed',
    downloadReady: 'Download ready',
  },
  
  validation: {
    required: 'This field is required',
    invalidInput: 'Invalid input',
    fileRequired: 'Please select a file',
    sessionRequired: 'Please select or create a session',
    apiKeyRequired: 'API key is required',
    connectionFailed: 'Connection failed',
    processingFailed: 'Processing failed',
    uploadFailed: 'Upload failed',
    unexpectedError: 'An unexpected error occurred',
  },
};